@model PeachDigital.Administration.Models.FilmReleaseRule

@{
    ViewBag.Title = "PDA | Film Release Rule";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>
    Film Release Rule
    <nav class="breadcrumb-nav" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/FilmReleaseRules">Film Release Rules</a></li>
            <li class="breadcrumb-item active" aria-current="page">Add Release Rule</li>
        </ol>
    </nav>
</h2>

<div class="row main-content">
    <div class="col-sm-12">
        <div class="form-area">
            <h3>Add Film Release Rule</h3>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmNewFilmReleaseRule" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                if (ViewBag.ErrorMessage != null)
                {
                    <p class="text-danger">@ViewBag.ErrorMessage</p>
                }

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class = "">Circuit Id</label>
                            @*@Html.LabelFor(model => model.CircuitId, "CircuitId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                            @Html.DropDownList("CircuitId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CircuitId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">Film Release Type Id</label>
                            @Html.EditorFor(model => model.FilmReleaseTypeId, new { htmlAttributes = new { @class = "form-control", min="1" } })
                            @Html.ValidationMessageFor(model => model.FilmReleaseTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">Opening Date</label>
                            @Html.EditorFor(model => model.OpeningDate, new { htmlAttributes = new { @class = "form-control", min = "1" } })
                            @Html.ValidationMessageFor(model => model.OpeningDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">First Session Date</label>
                            @Html.EditorFor(model => model.DateOfFirstSession, new { htmlAttributes = new { @class = "form-control", min = "1" } })
                            @Html.ValidationMessageFor(model => model.DateOfFirstSession, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">Last Session Date</label>
                            @Html.EditorFor(model => model.DateOfLastSession, new { htmlAttributes = new { @class = "form-control", min = "1" } })
                            @Html.ValidationMessageFor(model => model.DateOfLastSession, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">Scheduled</label>
                            @*@Html.EditorFor(model => model.IsScheduled)*@
                            @Html.DropDownList("IsScheduled", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IsScheduled, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">Comming Soon</label>
                            @Html.DropDownList("ComingSoon", null, htmlAttributes: new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.ComingSoon)*@
                            @Html.ValidationMessageFor(model => model.ComingSoon, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">Comming Soon Attributes</label>
                            @Html.EditorFor(model => model.ComingSoonAttribute, new { htmlAttributes = new { @class = "form-control", min = "1" } })
                            @Html.ValidationMessageFor(model => model.ComingSoonAttribute, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="">Comming Soon by Cinema</label>
                            @Html.DropDownList("ComingSoonByCinema", null, htmlAttributes: new { @class = "form-control" })                        
                            @*@Html.EditorFor(model => model.ComingSoonByCinema)*@
                            @Html.ValidationMessageFor(model => model.ComingSoonByCinema, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-12">
                        <div class="submit-btns">
                            <button type="button" class="btn-cancel">Cancel</button>
                            <button type="submit" class="btn-save">Save</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {

            $('#frmNewFilmReleaseRule').validate({
                errorClass: 'help-block animation-slideDown',
                errorElement: 'div',
                errorPlacement: function (error, e) {
                    e.parents('.form-group > div').append(error);
                },
                highlight: function (e) {
                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'FilmReleaseTypeId': {
                        required: true
                    },
                    'CircuitId': {
                        required: true
                    }
                },
                messages: {
                    'FilmReleaseTypeId': 'Release type is required',
                    'CircuitId': 'Circuit is required'
                }
            });

            $('input[type=submit]').click(function () {
                $(this).attr('disabled', 'disabled');
                $(this).parents('form').submit();
            });

            $('.btn-cancel').click(function () {
                window.location = "/FilmReleaseRules";
            });
        });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}