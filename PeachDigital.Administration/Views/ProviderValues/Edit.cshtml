@model PeachDigital.Administration.Models.ProviderValue

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>
    Payment Provider
    <nav class="breadcrumb-nav" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/ProviderValues">Payment Providers</a></li>
            <li class="breadcrumb-item active" aria-current="page">Edit Payment Provider</li>
        </ol>
    </nav>
</h2>

<div class="row main-content">
    <div class="col-sm-12">
        <div class="form-area">
            <h3>Edit Payment Provider</h3>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmEditPaymentProvider" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                if (ViewBag.ErrorMessage != null)
                {
                    <p class="text-danger">@ViewBag.ErrorMessage</p>
                }

                @Html.HiddenFor(m => m.Id)

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.Provider" class="">Provider</label>
                            @Html.DropDownList("ProviderId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProviderId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.Mode" class="">Mode</label>
                            @Html.DropDownList("ModeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ModeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.Circuit" class="">Circuit</label>
                            @Html.DropDownList("CircuitId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CircuitId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.Cinema" class="">Cinema</label>
                            @Html.DropDownList("CinemaId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CinemaId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.ProviderSetUpName" class="">Provider Setup Name</label>
                            @Html.EditorFor(model => model.ProviderSetUpName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProviderSetUpName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.ServiceName" class="">Service Name</label>
                            @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.ProviderUrl" class="">Provider Url</label>
                            @Html.EditorFor(model => model.ProviderUrl, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProviderUrl, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.UserName" class="">Username</label>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.Password" class="">Password</label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.ClientID" class="">Client Id</label>
                            @Html.EditorFor(model => model.ClientID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.WorkStationCode" class="">Workstation Code</label>
                            @Html.EditorFor(model => model.WorkStationCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.WorkStationCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.ClientClass" class="">Client Class</label>
                            @Html.EditorFor(model => model.ClientClass, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ClientClass, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.TemplatePrintStream" class="">Template Print Stream</label>
                            @Html.EditorFor(model => model.TemplatePrintStream, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TemplatePrintStream, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="model.ClubId" class="">Club Id</label>
                            @Html.EditorFor(model => model.ClubId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ClubId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <input type="checkbox" id="PerformPayment" class="custom-checkbox" name="PerformPayment" value="true" @if (Model.PerformPayment) {
                            @:checked="checked"
                        } />

                        <label for="PerformPayment" class="">Perform Payment</label>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="btn btn-default" />
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>


@section Scripts {

    <script type="text/javascript">
    $(document).ready(function () {

        $('#frmEditPaymentProvider').validate({
            errorClass: 'help-block animation-slideDown',
            errorElement: 'div',
            errorPlacement: function (error, e) {
                e.parents('.form-group > div').append(error);
            },
            highlight: function (e) {
                $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                $(e).closest('.help-block').remove();
            },
            success: function (e) {
                e.closest('.form-group').removeClass('has-success has-error');
                e.closest('.help-block').remove();
            },
            rules: {
                'ProviderId': {
                    required: true
                },
                'ModeId': {
                    required: true
                },
                'ServiceName': {
                    required: true
                }
            },
            messages: {
                'ProviderId': 'Provider Id is required.',
                'ModeId': 'Mode Id is required.',
                'ServiceName': 'Service Name is required.',
            }
        });

        $('input[type=submit]').click(function () {
            $(this).attr('disabled', 'disabled');
            $(this).parents('form').submit();
        });

        $('.btn-cancel').click(function () {
            window.location = "/ProviderValues";
        });
    });

    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
